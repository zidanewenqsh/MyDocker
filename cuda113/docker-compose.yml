#docker-compose.yaml代码
version: "3.8"
services:
  nvidiacuda113:
    container_name: ai113
    image: registry.cn-hangzhou.aliyuncs.com/phzn/nvidia_cuda:open3d-pcl-grpc-trtpy-cu113-cudnn8-devel-ubuntu18-v3.2.5
    #command: ["bash", "-c", "/usr/sbin/sshd -D && service xrdp restart"]
    restart: unless-stopped
    # command: bash -c "service xrdp restart && /usr/sbin/sshd -D"
    command: ["bash", "-c", "service xrdp restart && /usr/sbin/sshd -D "]
    shm_size: '16gb'
    environment:
      - DISPLAY=${DISPLAY}
    # network_mode: host
    networks:
        mycuda:
           ipv4_address: 172.18.0.4
    ports:
        - "8022:22"
        - "8389:3389"
        - "10000-10009:10000-10009"
    volumes:
        # - aihome:${USER_HOME}
        - ${HOME}/docker/vscode:${USER_HOME}/.vscode
        - ${HOME}/docker/clash:${USER_HOME}/clash
        - ${HOME}/docker/zshrc:${USER_HOME}/.zshrc
        - ${HOME}/docker/config/clash:${USER_HOME}/.config/clash
        - ${HOME}/anaconda3/envs:${USER_HOME}/.conda/envs
        - ${HOME}/share:/nfs
        - /workspace:/workspace
        - /var/run/docker.sock:/var/run/docker.sock
        - /tmp/.X11-unix:/tmp/.X11-unix
        - $HOME/.Xauthority:/root/.Xauthority:rw
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia  #驱动
              count: "all"
              #count: 1 #或"all"  #数量
              #device_ids: ['0','1','2','3'] #gpu id和 count二选一
              capabilities: [gpu]    #指定需要支持的功能；可以配置多个不同功能
              #capabilities: [gpu, utility] #支持多种功能

  mysql:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      mycuda:
        ipv4_address: 172.18.0.5

  redis:
    image: redis:latest
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      mycuda:
        ipv4_address: 172.18.0.6

  mongo:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      mycuda:
        ipv4_address: 172.18.0.7

  neo4j:
    image: neo4j:latest
    environment:
      NEO4J_AUTH: ${NEO4J_AUTH}
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    networks:
      mycuda:
        ipv4_address: 172.18.0.8

networks:
    mycuda:
        name: aihost
        external: true

volumes:
    aihome:
        # name: aihome
        # external: true
    mysql_data:
    redis_data:
    mongo_data:
    neo4j_data:
    neo4j_logs:



